android.view.View;void setImportantForAccessibility(int mode);DEF;ACCESSIBILITY;1;
android.view.View;void sendAccessibilityEvent(int eventType);DEF;ACCESSIBILITY_EVENT;2;
android.view.View;void setAccessibilityHeading(boolean isHeading);DEF;ACCESSIBILITY_HEADING;3;
android.view.View;void setAccessibilityLiveRegion(int mode);DEF;ACCESSIBILITY_REGION;4;
android.view.View;void setAccessibilityTraversalAfter(int afterId);DEF;ACCESSIBILITY_TRAVERSAL_A;5;
android.view.View;void setAccessibilityTraversalBefore(int beforeId);DEF;ACCESSIBILITY_TRAVERSAL_B;6;
android.view.View;boolean isActivated();USE;ACTIVATE;7;
android.view.View;void setActivated(boolean activated);DEF;ACTIVATE;7;
android.view.View;void setAlpha(float alpha);DEF;ALPHA;8;
android.view.View;float getAlpha();USE;ALPHA;8;
android.view.View;boolean isAutoHandwritingEnabled();USE;AUTO_HW;9;
android.view.View;void setAutoHandwritingEnabled(boolean enabled);DEF;AUTO_HW;9;
android.view.View;void setImportantForAutofill(int mode);DEF;AUTOFILL;10;
android.view.View;boolean isVisibleToUserForAutofill(int virtualId);USE;AUTOFILL;10;
android.view.View;final int getBottom();USE;BOTTOM;11;
android.view.View;final void setBottom(int bottom);DEF;BOTTOM;11;
android.view.View;boolean isClickable();USE;CLICK;12;
android.view.View;boolean performClick();DEF;CLICK;12;
android.view.View;void setAllowClickWhenDisabled(boolean clickableWhenDisabled);DEF;CLICK;12;
android.view.View;void setClickable(boolean clickable);DEF;CLICK;12;
android.view.View;void setClickable(boolean clickable);DEF;CLICK;12;
android.view.View;void setImportantForContentCapture(int mode);DEF;CONTENT_CAPTURE;13;
android.view.View;int getImportantForContentCapture();USE;CONTENT_CAPTURE;13;
android.view.View;boolean isImportantForContentCapture();USE;CONTENT_CAPTURE;13;
android.view.View;boolean isContextClickable();USE;CONTEXT_CLICK;14;
android.view.View;boolean performContextClick(float x, float y);DEF;CONTEXT_CLICK;14;
android.view.View;boolean performContextClick();DEF;CONTEXT_CLICK;14;
android.view.View;void setContextClickable(boolean contextClickable);DEF;CONTEXT_CLICK;14;
android.view.View;android.view.View findViewById(int id);DEF;CREATEID;15;
android.view.View;android.view.View  findViewWithTag(Object tag);DEF;CREATETAG;16;
android.view.View;void findViewsWithText(ArrayList<View> outViews, CharSequence searched, int flags);DEF;CREATETEXT;17;
android.view.View;void setLayoutDirection(int layoutDirection);DEF;DIRECTION;18;
android.view.View;int getLayoutDirection();USE;DIRECTION;18;
android.view.View;void setElevation(float elevation);DEF;ELEVATION;19;
android.view.View;void getElevation(float elevation);USE;ELEVATION;19;
android.view.View;boolean isEnabled();USE;ENABLE;20;
android.view.View;void setEnabled(boolean enabled);DEF;ENABLE;20;
android.view.View;boolean hasFocus();USE;FOCUS;21;
android.view.View;boolean hasFocusable();USE;FOCUS;21;
android.view.View;final boolean isFocusable();USE;FOCUS;21;
android.view.View;boolean isFocused();USE;FOCUS;21;
android.view.View;void setFocusable(int focusable);DEF;FOCUS;21;
android.view.View;void setFocusableInTouchMode(boolean focusableInTouchMode);DEF;FOCUS;21;
android.view.View;void setFocusedByDefault(boolean isFocusedByDefault);DEF;FOCUS;21;
android.view.View;void setFocusable(boolean focusable);DEF;FOCUS;21;
android.view.View;static int generateViewId();DEF;CREATEID;22;
android.view.View;int getId();USE;CREATEID;22;
android.view.View;long getUniqueDrawingId();USE;CREATEID;22;
android.view.View;void setId(int id);DEF;CREATEID;22;
android.view.View;boolean performHapticFeedback(int feedbackConstant);DEF;HAPTIC_FEEDBACK;23;
android.view.View;void setHapticFeedbackEnabled(boolean hapticFeedbackEnabled);DEF;HAPTIC_FEEDBACK;23;
android.view.View;final int getHeight();USE;HEIGHT;24;
android.view.View;void setHorizontalFadingEdgeEnabled(boolean horizontalFadingEdgeEnabled);DEF;HORIZONTAL_FADE;25;
android.view.View;void setHorizontalScrollBarEnabled(boolean horizontalScrollBarEnabled);DEF;HORIZONTAL_SCROLL;26;
android.view.View;boolean isHovered();USE;HOVER;27;
android.view.View;void onHoverChanged(boolean hovered);DEF;HOVER;27;
android.view.View;void setHovered(boolean hovered);DEF;HOVER;27;
android.view.View;boolean isInLayout();USE;IN_LAYOUT;28;
android.view.View;final void setPreferKeepClear(boolean preferKeepClear);DEF;KEEP_CLEAR;29;
android.view.View;void setKeyboardNavigationCluster(boolean isCluster);DEF;KEYBOARD_NAV;30;
android.view.View;void setLabelFor(int id);DEF;LABEL;31;
android.view.View;int getLabelFor();USE;LABEL;31;
android.view.View;int get LayoutDirection();USE;LAYOUT_DIRECTION;32;
android.view.View;void setLayoutDirection(int layoutDirection);DEF;LAYOUT_DIRECTION;32;
android.view.View;final int getLeft();USE;LEFT;33;
android.view.View;final void setLeft(int left);DEF;LEFT;33;
android.view.View;final boolean getLocalVisibleRect(Rect r);DEF;LOCAL_VISIBILITY;34;
android.view.View;boolean performLongClick(float x, float y);DEF;LONG_CLICK;35;
android.view.View;boolean performLongClick();DEF;LONG_CLICK;35;
android.view.View;boolean isLongClickable();USE;LONG_CLICK;35;
android.view.View;void 	setLongClickable(boolean longClickable);DEF;LONG_CLICK;35;
android.view.View;void setMinimumHeight(int minHeight);DEF;MIN_W;36;
android.view.View;void setMinimumWidth(int minWidth);DEF;MIN_W;36;
android.view.View;void setNestedScrollingEnabled(boolean enabled);DEF;NESTED_SCROLL;37;
android.view.View;void setNextClusterForwardId(int nextClusterForwardId);DEF;NEXT_CLUSTER;38;
android.view.View;int getNextClusterForwardId();DEF;NEXT_CLUSTER;38;
android.view.View;int getNextFocusDownId();USE;NEXT_FOCUS_DOWN;39;
android.view.View;void setNextFocusDownId(int nextFocusDownId);DEF;NEXT_FOCUS_DOWN;39;
android.view.View;int getNextFocusForwardId();USE;NEXT_FOCUS_FORWARD;40;
android.view.View;void setNextFocusForwardId(int nextFocusForwardId);DEF;NEXT_FOCUS_FORWARD;40;
android.view.View;int getNextFocusLeftId();USE;NEXT_FOCUS_LEFT;41;
android.view.View;void setNextFocusLeftId(int nextFocusLeftId);DEF;NEXT_FOCUS_LEFT;41;
android.view.View;int getNextFocusRightId();USE;NEXT_FOCUS_RIGHT;42;
android.view.View;void setNextFocusRightId(int nextFocusRightId);DEF;NEXT_FOCUS_RIGHT;42;
android.view.View;int getNextFocusUpId();USE;NEXT_FOCUS_UP;43;
android.view.View;void setNextFocusUpId(int nextFocusUpId);DEF;NEXT_FOCUS_UP;43;
android.view.View;void setPressed(boolean pressed);DEF;PRESS;44;
android.view.View;boolean isPressed();USE;PRESS;44;
android.view.View;final <T extends View> T requireViewById(int id);DEF;REQUIRE_ID;45;
android.view.View;final int getRight();USE;RIGHT;46;
android.view.View;final void setRight(int right);DEF;RIGHT;46;
android.view.View;void setRotation(float rotation);DEF;ROTATION;47;
android.view.View;void setRotationX(float rotationX);DEF;ROTATION_X;48;
android.view.View;void setRotationY(float rotationY);DEF;ROTATION_Y;49;
android.view.View;boolean isSaveEnabled();USE;SAVE;50;
android.view.View; void setSaveEnabled(boolean enabled);DEF;SAVE;50;
android.view.View;void setSaveFromParentEnabled(boolean enabled);DEF;SAVE_PARENT;51;
android.view.View;boolean isScreenReaderFocusable();USE;SCREEN_R_FOCUS;52;
android.view.View;void setScreenReaderFocusable (boolean screenReaderFocusable);DEF;SCREEN_R_FOCUS;52;
android.view.View;void setKeepScreenOn(boolean keepScreenOn);DEF;SCREEN_ON;53;
android.view.View;boolean getKeepScreenOn ();USE;SCREEN_ON;53;
android.view.View;void onScreenStateChanged(int screenState);DEF;SCREEN_STATE;54;
android.view.View;void scrollBy(int x, int y);DEF;SCROLL;55;
android.view.View;void scrollTo(int x, int y);DEF;SCROLL;55;
android.view.View;void setScrollContainer(boolean isScrollContainer);DEF;SCROLL_CONTAINER;56;
android.view.View;boolean isScrollContainer();USE;SCROLL_CONTAINER;57;
android.view.View;boolean isScrollbarFadingEnabled();USE;SCROLL_FADE;58;
android.view.View;void setScrollbarFadingEnabled(boolean fadeScrollbars);DEF;SCROLL_FADE;58;
android.view.View;void setScrollCaptureHint(int hint);DEF;SCROLL_HINT;59;
android.view.View;boolean hasNestedScrollingParent();USE;SCROLL_PARENT;60;
android.view.View;void setScrollBarStyle(int style);DEF;SCROLL_STYLE;61;
android.view.View;int getScrollX();USE;SCROLL_X;62;
android.view.View;void setScrollX(int value);DEF;SCROLL_X;62;
android.view.View;void setScrollY(int value);DEF;SCROLL_Y;63;
android.view.View;int getScrollY();USE;SCROLL_Y;63;
android.view.View;boolean isSelected();USE;SELECT;64;
android.view.View;void setSelected(boolean selected);DEF;SELECT;64;
android.view.View;boolean isShown();USE;SHOW;65;
android.view.View;boolean isSoundEffectsEnabled() ;USE;SOUND_EFFECT;66;
android.view.View;void setSoundEffectsEnabled(boolean soundEffectsEnabled);DEF;SOUND_EFFECT;66;
android.view.View;void playSoundEffect(int soundConstant);DEF;SOUND_EFFECT;66;
android.view.View;void setSystemUiVisibility(int visibility);DEF;SYSTEM_VISIBLE;67;
android.view.View;boolean isTextAlignmentResolved();USE;TEXT_ALIGNMENT;68;
android.view.View;void setTextAlignment(int textAlignment);DEF;TEXT_ALIGNMENT;68;
android.view.View;boolean isTextDirectionResolved();USE;TEXT_DIRECTION;69;
android.view.View;void setTextDirection(int textDirection);DEF;TEXT_DIRECTION;69;
android.view.View;boolean onCheckIsTextEditor();USE;TEXTEDITOR;70;
android.view.View;final int getTop();USE;TOP;71;
android.view.View;final void setTop(int top);DEF;TOP;71;
android.view.View;boolean isInTouchMode();USE;TOUCH;72;
android.view.View;void setHasTransientState(boolean hasTransientState);DEF;TRANSIENT;73;
android.view.View;void setTransitionVisibility(int visibility);DEF;TRANSIENT;73;
android.view.View;boolean isVerticalFadingEdgeEnabled();USE;VERTICAL_FADE;74;
android.view.View;void setVerticalFadingEdgeEnabled(boolean verticalFadingEdgeEnabled);DEF;VERTICAL_FADE;74;
android.view.View;boolean isVerticalScrollBarEnabled();USE;VERTICAL_SCROLL;75;
android.view.View;void setVerticalScrollBarEnabled(boolean verticalScrollBarEnabled);DEF;VERTICAL_SCROLL;75;
android.view.View;void setVerticalScrollbarPosition(int position);DEF;VERTICAL_SCROLL;75;
android.view.View;int getVisibility();USE;VISIBLE;76;
android.view.View;void onVisibilityAggregated(boolean isVisible);DEF;VISIBLE;76;
android.view.View;void setVisibility(int visibility);DEF;VISIBLE;76;
android.view.View;final int getWidth() ;USE;WIDTH;77;
android.view.View;void onWindowFocusChanged(boolean hasWindowFocus);DEF;WINDOW_FOCUS;78;
android.view.View;int getWindowVisibility();USE;WINDOW_VISIBLE;79;
android.view.View;void onWindowSystemUiVisibilityChanged(int visible);DEF;WINDOWSYSTEM_VISIBILITY;80;
android.view.View;void setScaleX(float scaleX);DEF;SCALE_X;81;
android.view.View;float getScaleX();USE;SCALE_X;81;
android.view.View;void setX(float x);DEF;X;82;
android.view.View;float getX();USE;X;82;
android.view.View;void setScaleY(float scaleY);DEF;SCALE_Y;83;
android.view.View;float getScaleY();USE;SCALE_Y;83;
android.view.View;void setY(float y);DEF;Y;84;
android.view.View;float getY();USE;Y;84;
android.view.View;void setZ(float z);DEF;Z;85;
android.view.View;float getY();USE;Z;85;
android.view.MotionEvent;int getAction();USE;MOTION_ACTION;86;
android.view.MotionEvent;int getActionButton();USE;MOTION_ACTION_BUTTON;87;
android.view.MotionEvent;int getActionIndex();USE;MOTION_ACTION_INDEX;88;
android.view.MotionEvent;int getActionMasked();USE;MOTION_ACTION_MASKED;89;
android.view.MotionEvent;int get ButtonState();USE;MOTION_BUTTON_STATE;90;
android.view.MotionEvent;int getFlags();USE;MOTION_ACTION_FLAGS;91;
android.view.MotionEvent;float getOrientation();USE;MOTION_ORIENTATION;92;
android.view.MotionEvent;float getOrientation(int orientation);USE;MOTION_ORIENTATION;92;
android.view.MotionEvent;void setAction(int action);DEF;MOTION_ACTION;86;
android.view.MotionEvent;void setEdgeFlags(int flags);DEF;MOTION_ACTION_EFLAGS;93;
android.view.MotionEvent;int getEdgeFlags();USE;MOTION_ACTION_EFLAGS;93;
android.view.KeyEvent;int getAction();USE;KEY_ACTION;94;
android.view.KeyEvent;int getFlags();USE;KEY_FLAGS;95;
android.view.KeyEvent;int getKeyCode();USE;KEY_CODE;96;
android.view.KeyEvent;char getNumber();USE;KEY_NUM;97;
android.view.KeyEvent;int getRepeatCount();USE;KEY_COUNT;98;
android.view.KeyEvent;int getScanCode();USE;KEY_SCAN;99;
android.view.KeyEvent;boolean isAltPressed();USE;ALT;100;
android.view.KeyEvent;boolean isCanceled();USE;CANCEL;101;
android.view.KeyEvent;boolean isCapsLockOn();USE;CAPS;102;
android.view.KeyEvent;boolean isCtrlPressed();USE;CTRL;103;
android.view.KeyEvent;boolean isFunctionPressed();USE;FUNCTION;104;
android.view.KeyEvent;boolean isGamePadButton(int keyMode);USE;GAMEPAD;105;
android.view.KeyEvent;boolean isLongPress();USE;LONG_CLICK;106;
android.view.KeyEvent;boolean isMetaPressed();USE;META;107;
android.view.KeyEvent;boolean isModifierKey(int key);USE;MODIFER;108;
android.view.KeyEvent;boolean isNumLockOn();USE;NUMLOCK;109;
android.view.KeyEvent;boolean isPrintingKey();USE;PRINTING;110;
android.view.KeyEvent;boolean isScrollLockOn();USE;SCROLL;111;
android.view.KeyEvent;boolean isShiftPressed();USE;SHIFT;112;
android.view.KeyEvent;boolean isSymPressed();USE;SYM;113;
android.view.KeyEvent;boolean isSystem();USE;SYSTEM;114;
android.view.KeyEvent;boolean isTracking();USE;TRACK;115;
android.view.DragEvent;int getAction();USE;DRAG_ACTION;116;
android.view.DragEvent;int getLocalState();USE;DRAG_STATE;117;
android.view.DragEvent;boolean getResults();USE;DRAG_RESULTS;118;
android.view.DragEvent;float getX();USE;DRAG_X;119;
android.view.DragEvent;float getY();USE;DRAG_Y;120;
android.app.ActionBar$Tab;void select();DEF;TAB_SELECT;121;
android.app.ActionBar$Tab;int getPosition();USE;TAB_POS;122;
android.content.DialogInterface;void cancel();DEF;CANCEL;123;
android.content.DialogInterface;void dismiss();DEF;DISMISS;124;
android.widget.AbsListView;int getCheckedItemCount();USE;ABS_COUNT;125;
android.widget.AbsListView;int getCheckedItemPosition();USE;ABS_POS;126;
android.widget.AbsListView;long[] getCheckedItemIds();USE;ABS_ITEMS;127;
android.widget.AbsListView;int getChoiceMode();USE;ABS_MODE;128;
android.widget.AbsListView;boolean isItemChecked(int item);USE;ABS_CHECKED;129;
android.widget.AbsListView;boolean isSelectedChildViewEnabled();USE;ABS_CHILD;130;
android.widget.AbsListView;void setItemChecked(int item, boolean isChecked);DEF;ABS_CHECKED;129;
android.widget.AbsListView;void setChoiceMode(int mode);DEF;ABS_MODE;128;
android.widget.AdapterView;long getSelectedItemId();USE;ADAPTER_SELECT;131;
android.widget.AdapterView;int getSelectedItemPosition(int position);USE;ADAPTER_POS;132;
android.widget.AdapterView;void setSelection(int id);DEF;ADAPTER_SELECT;131;
android.widget.ExpandableListView;long getSelectedId();USE;ELIST_SELECT;133;
android.widget.ExpandableListView;long getSelectedPosition();USE;ELIST_POS;134;
android.widget.ExpandableListView;boolean isGroupExpanded(int expanded);USE;ELIST_GROUP;135;
android.widget.ExpandableListView;boolean performItemClick(android.view.View v, int item, long value);USE;ELIST_CLICK;136;
android.widget.ExpandableListView;void setSelectedChild(int id, int child, boolean selected);DEF;ELIST_CSELECT;137;
android.widget.ExpandableListView;void setSelectedGroup(int selected);DEF;ELIST_GSELECT;138;
android.app.FragmentManager$BackStackEntry;int getBreadCrumbShortTitleRes();USE;CRUMB_SHORTID;139;
android.app.FragmentManager$BackStackEntry;int getBreadCrumbTitleRes() ;USE;CRUMB_ID;140;
android.app.FragmentManager$BackStackEntry;int getId();USE;CRUMB_ID;140;
android.widget.CompoundButton;boolean isChecked();USE;BUTTON_CHECK;141;
android.widget.CompoundButton;void toggle();DEF;BUTTON_TOGGLE;142;
android.widget.NumberPicker;int getValue();USE;NP_VALUE;143;
android.widget.RadioGroup;void check(int checked);DEF;RG_CHECK;144;
android.widget.RadioGroup;void clearCheck();USE;RG_CCHECK;145;
android.widget.RadioGroup;int getCheckedRadioButtonId();USE;RG_CHECK;144;
android.view.MenuItem;int getGroupId();USE;MENU_GROUP;145;
android.view.MenuItem;int getItemId();USE;MENU_ID;146;
android.view.MenuItem;boolean isChecked();USE;MENU_CHECKED;147;
android.view.MenuItem;boolean isCheckable();USE;MENU_CHECKABLE;148;
android.view.MenuItem;boolean isEnabled();USE;MENU_ENABLED;149;
android.view.MenuItem;void setChecked(boolean);DEF;MENU_CHECKED;147;
android.view.MenuItem;void setCheckable(boolean);DEF;MENU_CHECKABLE;148;
android.view.MenuItem;void setEnabled(boolean);DEF;MENU_ENABLED;149;
